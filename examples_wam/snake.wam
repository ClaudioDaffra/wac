(module $snake

  (import "env" "memory" (memory 256))
  (import "env" "memoryBase" (global $memoryBase i32))

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (global $SNAKE_ARRAY_LEN  (mut i32) 300)

  (global $snake            (mut i32) 0)
  (global $snake_len        (mut i32) 1)
  (global $snake_dir        (mut i32) 1)
  (global $snake_speed      (mut i32) 128)

  (func $get_x  (param $pos i32) (result i32)
    (i32.load8_u offset=0 (i32.add (global.get $snake) (i32.mul 3 $pos)))
  )
  (func $get_y  (param $pos i32) (result i32)
    (i32.load8_u offset=1 (i32.add (global.get $snake) (i32.mul 3 $pos)))
  )
  (func $get_ch (param $pos i32) (result i32)
    (i32.load8_u offset=2 (i32.add (global.get $snake) (i32.mul 3 $pos)))
  )
  (func $set_x_y_ch (param $pos i32)
        (param $x i32) (param $y i32) (param $ch i32)
    (LET $ptr (i32.add (global.get $snake) (i32.mul 3 $pos)))
    (if (i32.ne -1 $x) (i32.store8 offset=0 $ptr $x))
    (if (i32.ne -1 $x) (i32.store8 offset=1 $ptr $y))
    (i32.store8 offset=2 $ptr $ch)
  )

  (func $draw_snake_head (param $x i32 $y i32)
    (LET $c 0
         $dir (global.get $snake_dir))
    (local.set $c (if i32       (i32.eq 0 $dir) (CHR "^")
                  (else (if i32 (i32.eq 1 $dir) (CHR ">")
                  (else (if i32 (i32.eq 2 $dir) (CHR "v")
                  (else                         (CHR "<"))))))))
    ($drawch $c $x $y (global.get $COLOR_GREEN))
  )

  (func $draw_snake
    (LET $cur 0
         $x   0
         $y   0
         $c   0)
    (loop $loop
      (local.set $x ($get_x $cur))
      (local.set $y ($get_y $cur))
      (local.set $c ($get_ch $cur))
      ($drawch $c $x $y (global.get $COLOR_GREEN))
      (local.set $cur (i32.add 1 $cur))
      (br_if $loop (i32.lt_u $cur (global.get $snake_len)))
    )
    ($draw_snake_head $x $y)
  )

  (func $tick (param $grow i32)
    (LET $dir (global.get $snake_dir)
         $x1  ($get_x 0)
         $y1  ($get_y 0)
         $x2  ($get_x (i32.sub (global.get $snake_len) 1))
         $y2  ($get_y (i32.sub (global.get $snake_len) 1))
         $dy  (if i32 (i32.eq 0 $dir) -1 (if i32 (i32.eq 2 $dir)  1 0))
         $dx  (if i32 (i32.eq 1 $dir)  1 (if i32 (i32.eq 3 $dir) -1 0))
         $c   (if i32 (i32.rem_u $dir 2) (CHR "-") (CHR "|"))
         $idx 0)

    ;; Add to the head (end)
    ($set_x_y_ch (global.get $snake_len)
                 (i32.add $x2 $dx) (i32.add $y2 $dy) $c)
    (global.set $snake_len (i32.add 1 (global.get $snake_len)))

    ;; Erase the tail (start) if not growing
    (if (i32.eqz $grow)
      (then
        (loop $loop
          (i32.store8
            (i32.add $idx (global.get $snake))
            (i32.load8_u (i32.add 3 (i32.add $idx (global.get $snake)))))
          (local.set $idx (i32.add 1 $idx))
          (br_if $loop (i32.lt_u $idx (i32.mul 3 (global.get $snake_len))))
        )
        (global.set $snake_len (i32.sub (global.get $snake_len) 1))))

    ($draw_snake)
  )

  (func $main
    (LET $ch 0
         $pos 0
         $new_dir (global.get $snake_dir)
         $tick 0)
    (global.set $snake       (STATIC_ARRAY 300))
    (global.set $snake_speed 64)

    ($set_x_y_ch 0  9 10 (CHR "-"))
    ($set_x_y_ch 1 10 10 (CHR "-"))
    (global.set $snake_len 2)

    ($init_console)
    ($draw "SNAKE GAME" 35 23 (global.get $COLOR_CYAN))

    ($draw_snake)
    ;;(loop $loop (br $loop))

    (loop $loop
      (local.set $pos (i32.sub (global.get $snake_len) 1))
      (local.set $tick (i32.add $tick 1))
      (drop ($usleep 2000))
      (if (i32.eqz (i32.rem_u $tick (global.get $snake_speed)))
        (then
          (global.set $snake_dir $new_dir)
          ($tick 0)))

      (local.set $ch ($readch))
      (br_if $loop (i32.eq -1 $ch))
      (if (i32.eq $ch (global.get $KEY_UP)) (local.set $new_dir 0))
      (if (i32.eq $ch (global.get $KEY_DOWN)) (local.set $new_dir 2))
      (if (i32.eq $ch (global.get $KEY_LEFT)) (local.set $new_dir 3))
      (if (i32.eq $ch (global.get $KEY_RIGHT)) (local.set $new_dir 1))
      (if (i32.rem_u (i32.add (global.get $snake_dir) $new_dir) 2)
        (then
          ;; Left or right turn
          ($set_x_y_ch $pos -1 -1 (CHR "+"))
          ($draw_snake_head ($get_x $pos) ($get_y $pos)))
        (else
          ;; 180 or turn towards current direction
          (local.set $new_dir (global.get $snake_dir))))
      (br_if $loop (i32.ne $ch (global.get $KEY_Q)))
    )

    ($term_console)
  )

  (export "_main" (func $main))
)
